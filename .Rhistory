# using regex to select the month
mass.shooting$month.only <- gsub('([A-Za-z]+).*', '\\1', mass.shooting$date)
# Showing what month has the biggest incident
month.most <- mass.shooting %>%
group_by(month.only) %>%
summarise(sum = sum(killed)) %>%
arrange(-sum)
library(knitr)
table <- kable(month.most,
col.names = c('Month', '# Of deaths'))
# selecting the Orlando incident
specific.incident <- mass.shooting %>%
filter(killed == max(killed))
# Making the interactive map
#geo styling
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB('gray95'),
subunitcolor = toRGB('gray85'),
countrycolor = toRGB('gray85'),
countrywidth = 0.5,
subunitwidth = 0.5
)
map <- plot_geo(mass.shooting, lat = ~lat, lon = ~lng) %>%
add_markers(
text = ~paste(date, city, state, paste('Injured:', injured), paste('Killed:', killed), sep = '<br />'),
color = ~injured, symbol = I('circle'), size = ~injured, hoverinfo = 'text'
) %>%
colorbar(title = '# of people who died') %>%
layout(
title = 'Death from mass shooting in the US. in 2016', geo = g
)
# injured but doesn't killed (less severe)
mass.shooting.injured <- nrow(mass.shooting %>% filter(injured > 0 & killed == 0))
# killed but doesn't injured (accurate)
mass.shooting.killed <- nrow(mass.shooting %>% filter(injured == 0 & killed > 0))
# injured and killed (wild)
mass.shooting.both <- nrow(mass.shooting %>% filter(injured == 0 & killed > 0))
# kill and injure no one (what we want)
mass.shooting.none <- nrow(mass.shooting %>% filter(injured == 0 & killed == 0))
different.ways <- c(mass.shooting.injured, mass.shooting.killed, mass.shooting.both, mass.shooting.none)
categories <- c('Injured but no kill', 'Killed and no one injured', 'Killed and Injured', 'No one killed or injured')
different.data <- data.frame(different.ways, categories)
states.affected <- mass.shooting %>%
group_by(state) %>%
summarise(sum = sum(killed))
# Pie Chart
pie <- plot_ly(states.affected, labels = ~categories, values = ~states.affected$state, type = 'pie') %>%
layout(title = 'Different type of casualties in terms of # of events',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
```
## Summary Information
In 2016, there are over `r number.shootings` in the US. The total number of casualties are `r killed`. The city that got affected the most was `r city.affected$city` with a total death of `r city.affected$killed`. It makes sense that then `r state.affected$state` has the most death with `r state.affected$sum`.
## Summary Table
This is a table that shows in order of each month from highest to lowest casualties. This will helpfully shows the police what month could need a little bit extra security to prevent any future casualties. This also educates people to be careful and stay safe around this time.
`r table`
## The Orlando Nightclub Shooting
On `r specific.incident$date`, the biggest mass shooting incident in the US in the past year. `r specific.incident$killed` people were killed and `r specific.incident$injured` were injured in a nightclub in `r specific.incident$city`, `r specific.incident$state`. One of the interesting point is that it was done by an American-born man who's pledged allegiance to ISIS. This makes this the worst terror attack since 9/11 ([source](http://www.cnn.com/2016/06/12/us/orlando-nightclub-shooting/)).
## Interactive Map
`r map`
## Interactive Plot
This pie chart shows the variety of outcomes from a mass shooting in the US. There are 0 instances of mass shooting where there are no injury or someone die from the chart, which is very very alarming. It also shows that the number of mass shooting end up with only injury are way larger than cases where there are deaths, which even though a very good thing, we could definitely strive to make sure this gap becomes as big as possible. This means that we should train our police better to prevent further casualty from mass shooting.
`r pie`
states.affected <- mass.shooting %>%
group_by(state) %>%
summarise(sum = sum(killed))
pie <- plot_ly(states.affected, labels = ~categories, values = ~states.affected$state, type = 'pie') %>%
layout(title = 'Different type of casualties in terms of # of events',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
mass.shooting <- read.csv('data/shootings-2016.csv', stringsAsFactors = FALSE)
---
title: "Mass shooting Report"
output: html_document
---
```{r, echo=FALSE, message=FALSE}
#  Load in the data
library(jsonlite)
library(httr)
library(dplyr)
library(plotly)
mass.shooting <- read.csv('data/shootings-2016.csv', stringsAsFactors = FALSE)
number.shootings <- nrow(mass.shooting)
killed <- summarise(mass.shooting, sum(killed))
# selecting city that has the most death
city.affected <- mass.shooting %>%
filter(killed == max(killed)) %>%
select(city, killed)
# finding state with the most death
state.affected <- mass.shooting %>%
group_by(state) %>%
summarise(sum = sum(killed)) %>%
filter(sum == max(sum))
# using regex to select the month
mass.shooting$month.only <- gsub('([A-Za-z]+).*', '\\1', mass.shooting$date)
# Showing what month has the biggest incident
month.most <- mass.shooting %>%
group_by(month.only) %>%
summarise(sum = sum(killed)) %>%
arrange(-sum)
library(knitr)
table <- kable(month.most,
col.names = c('Month', '# Of deaths'))
# selecting the Orlando incident
specific.incident <- mass.shooting %>%
filter(killed == max(killed))
# Making the interactive map
#geo styling
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showland = TRUE,
landcolor = toRGB('gray95'),
subunitcolor = toRGB('gray85'),
countrycolor = toRGB('gray85'),
countrywidth = 0.5,
subunitwidth = 0.5
)
map <- plot_geo(mass.shooting, lat = ~lat, lon = ~lng) %>%
add_markers(
text = ~paste(date, city, state, paste('Injured:', injured), paste('Killed:', killed), sep = '<br />'),
color = ~injured, symbol = I('circle'), size = ~injured, hoverinfo = 'text'
) %>%
colorbar(title = '# of people who died') %>%
layout(
title = 'Death from mass shooting in the US. in 2016', geo = g
)
# injured but doesn't killed (less severe)
mass.shooting.injured <- nrow(mass.shooting %>% filter(injured > 0 & killed == 0))
# killed but doesn't injured (accurate)
mass.shooting.killed <- nrow(mass.shooting %>% filter(injured == 0 & killed > 0))
# injured and killed (wild)
mass.shooting.both <- nrow(mass.shooting %>% filter(injured == 0 & killed > 0))
# kill and injure no one (what we want)
mass.shooting.none <- nrow(mass.shooting %>% filter(injured == 0 & killed == 0))
different.ways <- c(mass.shooting.injured, mass.shooting.killed, mass.shooting.both, mass.shooting.none)
categories <- c('Injured but no kill', 'Killed and no one injured', 'Killed and Injured', 'No one killed or injured')
different.data <- data.frame(different.ways, categories)
states.affected <- mass.shooting %>%
group_by(state) %>%
summarise(sum = sum(killed))
# Pie Chart
pie <- plot_ly(states.affected, labels = ~categories, values = ~states.affected$state, type = 'pie') %>%
layout(title = 'Different type of casualties in terms of # of events',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
```
## Summary Information
In 2016, there are over `r number.shootings` in the US. The total number of casualties are `r killed`. The city that got affected the most was `r city.affected$city` with a total death of `r city.affected$killed`. It makes sense that then `r state.affected$state` has the most death with `r state.affected$sum`.
## Summary Table
This is a table that shows in order of each month from highest to lowest casualties. This will helpfully shows the police what month could need a little bit extra security to prevent any future casualties. This also educates people to be careful and stay safe around this time.
`r table`
## The Orlando Nightclub Shooting
On `r specific.incident$date`, the biggest mass shooting incident in the US in the past year. `r specific.incident$killed` people were killed and `r specific.incident$injured` were injured in a nightclub in `r specific.incident$city`, `r specific.incident$state`. One of the interesting point is that it was done by an American-born man who's pledged allegiance to ISIS. This makes this the worst terror attack since 9/11 ([source](http://www.cnn.com/2016/06/12/us/orlando-nightclub-shooting/)).
## Interactive Map
`r map`
## Interactive Plot
This pie chart shows the variety of outcomes from a mass shooting in the US. There are 0 instances of mass shooting where there are no injury or someone die from the chart, which is very very alarming. It also shows that the number of mass shooting end up with only injury are way larger than cases where there are deaths, which even though a very good thing, we could definitely strive to make sure this gap becomes as big as possible. This means that we should train our police better to prevent further casualty from mass shooting.
`r pie`
View(states.affected)
categories <- states.affected$state
percentage.specific <- specific.incident$killed / state.affected$killed
percentage.specific
percentage.specific <- specific.incident$killed / state.affected$killed * 100
percentage.specific <- specific.incident$killed / state.affected$sum * 100
percentage.specific
shiny::runApp('C:/Users/Tu/Desktop/Sophomore Year/Spring/INFO 201/a8-building-apps-nguyet04')
library(dplyr)
library(plotly)
dice1 <- c(1:12)
dice2 <- c(1:6)
sample1 <- sample(dice1, 10000, replace = TRUE)
sample2 <- sample(dice2, 10000, replace = TRUE)
sample1
dice1.df <- data.frame(sample1)
dice1.df
sample1 <- sample(dice1, 10000, replace = TRUE)
sample1
dice1.df <- summarise(count = n())
dice1.df <- summarise(dice1.df, count = n())
dice1.df
barplot(table(sample1), ylim=c(0,2000), xlab = 'number', ylab = 'count', main = 'Counts for set1')
barplot(table(sample2), ylim=c(0,2000), xlab = 'number', ylab = 'count', main = 'Counts for set2')
barplot(table(sample1), ylim=c(0,2000), xlab = 'number', ylab = 'count', main = 'Counts for set1')
barplot(table(sample2), ylim=c(0,2000), xlab = 'number', ylab = 'count', main = 'Counts for set2')
sample2 <- sample(dice2, 10000, replace = TRUE) + sample(dice2, 10000, replace = TRUE)
barplot(table(sample2), ylim=c(0,2000), xlab = 'number', ylab = 'count', main = 'Counts for set2')
sample11 <- sample(dice1, 5, replace = TRUE)
sample12 <- sample(dice1, 25, replace = TRUE)
sample13 <- sample(dice1, 125, replace = TRUE)
sample14 <- sample(dice1, 625, replace = TRUE)
barplot(mean(sample11), ylim=c(0,2000), xlab = 'number', ylab = 'count', main = 'Counts for set1')
barplot(mean(sample11), ylim=c(0, 5, xlab = 'number', ylab = 'count', main = 'Counts for set1')
barplot(mean(sample11), ylim=c(0, 5, xlab = 'number', ylab = 'count', main = 'Counts for set1')
for (i in 1:5) {
sample11 = mean(sample11, mean(sample(dice1, 5, replace = TRUE)))
}
barplot(table(sample11), ylim=c(0, 5, xlab = 'number', ylab = 'count', main = 'Counts for set1')
barplot(table(sample11), ylim=c(0, 5, xlab = 'number', ylab = 'count', main = 'Counts for set1')
barplot(table(sample11), ylim=c(0, 5, xlab = 'number', ylab = 'count', main = 'Counts for set1')
for (i in 1:5) {
sample11 = mean(sample11, mean(sample(dice1, 5, replace = TRUE)))
}
for (i in 1:5) {
sample11 = mean(sample11, mean(sample(dice1, 10000, replace = TRUE)))
}
# Probability of Yoyo getting a Triple Chocolate M&M or a Milk Chocolate M&M?
prob.a <- (10 + 25) / (15+ 25 + 10)
prob.a
total <- 15 + 25 + 10
prob.a <- (10 + 25) / total
prob.a
prob.b <- (10 / total) * ((25 + 9) / (total - 1))
prob.b
prob.c <- (10 / 20) * (10 / 20)
prob.c
prob.c2 <- (10 / 20) * (9 / 19)
prob.c2
prob.d <- (1000 / 2000) * (1000 / 2000)
prob.d
prob.d2 <- (1000 / 2000) * (999 / 1999)
prob.d2
sd(pre.steroid)
library(plotly)
setwd("C:/Users/Tu/Desktop/Junior Year/Fall/INFO 370 Data Science/Final Project/steroid-era-mlb-godwinners")
GL <- read.csv('Data/GL2008.csv')
msc1990 <- read.csv('Data/MSC1990.csv')
msc1991 <- read.csv('Data/MSC1991.csv')
msc1992 <- read.csv('Data/MSC1992.csv')
msc1993 <- read.csv('Data/MSC1993.csv')
msc1994 <- read.csv('Data/MSC1994.csv')
msc1995 <- read.csv('Data/MSC1995.csv')
msc1996 <- read.csv('Data/MSC1996.csv')
msc1997 <- read.csv('Data/MSC1997.csv')
msc1998 <- read.csv('Data/MSC1998.csv')
msc1999 <- read.csv('Data/MSC1999.csv')
msc2000 <- read.csv('Data/MSC2000.csv')
msc2001 <- read.csv('Data/MSC2001.csv')
msc2002 <- read.csv('Data/MSC2002.csv')
msc2003 <- read.csv('Data/MSC2003.csv')
msc2004 <- read.csv('Data/MSC2004.csv')
msc2005 <- read.csv('Data/MSC2005.csv')
msc2006 <- read.csv('Data/MSC2006.csv')
msc2007 <- read.csv('Data/MSC2007.csv')
msc2008 <- read.csv('Data/MSC2008.csv')
attendance <- c(sum(msc1990$Attendance) / length(msc1990$Attendance), sum(msc1991$Attendance) / length(msc1991$Attendance),
sum(msc1992$Attendance) / length(msc1992$Attendance), sum(msc1993$Attendance) / length(msc1993$Attendance),
sum(msc1994$Attendance) / length(msc1994$Attendance), sum(msc1995$Attendance) / length(msc1995$Attendance),
sum(msc1996$Attendance) / length(msc1996$Attendance), sum(msc1997$Attendance) / length(msc1997$Attendance),
sum(msc1998$Attendance) / length(msc1998$Attendance), sum(msc1999$Attendance) / length(msc1999$Attendance),
sum(msc2000$Attendance) / length(msc2000$Attendance), sum(msc2001$Attendance) / length(msc2001$Attendance),
sum(msc2002$Attendance) / length(msc2002$Attendance), sum(msc2003$Attendance) / length(msc2003$Attendance),
sum(msc2004$Attendance) / length(msc2004$Attendance), sum(msc2005$Attendance) / length(msc2005$Attendance),
sum(msc2006$Attendance) / length(msc2006$Attendance), sum(msc2007$Attendance) / length(msc2007$Attendance),
sum(msc2008$Attendance) / length(msc2008$Attendance))
pre.steroid <- attendance[0:5]
during.steroid <- attendance[6:12]
after.steroid <- attendance[13:18]
sd(pre.steroid)
t.test(pre.steroid, during.steroid)
plot(attendance, type = "o", col = "red", xlab = "Years", ylab = "Average Attendance Per Team (People)",
main = "Average Team Attendance Per Year", x = c(1990:2008))
# Time to convert the $ into int
msc1990$Est..Payroll <- as.numeric(gsub('[$,]', '', msc1990$Est..Payroll))
msc1991$Est..Payroll <- as.numeric(gsub('[$,]', '', msc1991$Est..Payroll))
msc1992$Est..Payroll <- as.numeric(gsub('[$,]', '', msc1992$Est..Payroll))
msc1993$Est..Payroll <- as.numeric(gsub('[$,]', '', msc1993$Est..Payroll))
msc1994$Est..Payroll <- as.numeric(gsub('[$,]', '', msc1994$Est..Payroll))
msc1995$Est..Payroll <- as.numeric(gsub('[$,]', '', msc1995$Est..Payroll))
msc1996$Est..Payroll <- as.numeric(gsub('[$,]', '', msc1996$Est..Payroll))
msc1997$Est..Payroll <- as.numeric(gsub('[$,]', '', msc1997$Est..Payroll))
msc1998$Est..Payroll <- as.numeric(gsub('[$,]', '', msc1998$Est..Payroll))
msc1999$Est..Payroll <- as.numeric(gsub('[$,]', '', msc1999$Est..Payroll))
msc2000$Est..Payroll <- as.numeric(gsub('[$,]', '', msc2000$Est..Payroll))
msc2001$Est..Payroll <- as.numeric(gsub('[$,]', '', msc2001$Est..Payroll))
msc2002$Est..Payroll <- as.numeric(gsub('[$,]', '', msc2002$Est..Payroll))
msc2003$Est..Payroll <- as.numeric(gsub('[$,]', '', msc2003$Est..Payroll))
msc2004$Est..Payroll <- as.numeric(gsub('[$,]', '', msc2004$Est..Payroll))
msc2005$Est..Payroll <- as.numeric(gsub('[$,]', '', msc2005$Est..Payroll))
msc2006$Est..Payroll <- as.numeric(gsub('[$,]', '', msc2006$Est..Payroll))
msc2007$Est..Payroll <- as.numeric(gsub('[$,]', '', msc2007$Est..Payroll))
msc2008$Est..Payroll <- as.numeric(gsub('[$,]', '', msc2008$Est..Payroll))
payroll <- c(sum(msc1990$Est..Payroll) / length(msc1990$Est..Payroll), sum(msc1991$Est..Payroll) / length(msc1991$Est..Payroll), sum(msc1992$Est..Payroll) / length(msc1992$Est..Payroll), sum(msc1993$Est..Payroll) / length(msc1993$Est..Payroll),
sum(msc1994$Est..Payroll) / length(msc1994$Est..Payroll), sum(msc1995$Est..Payroll) / length(msc1995$Est..Payroll), sum(msc1996$Est..Payroll) / length(msc1996$Est..Payroll), sum(msc1997$Est..Payroll) / length(msc1997$Est..Payroll),
sum(msc1998$Est..Payroll) / length(msc1998$Est..Payroll), sum(msc1999$Est..Payroll) / length(msc1999$Est..Payroll), sum(msc2000$Est..Payroll) / length(msc2000$Est..Payroll), sum(msc2001$Est..Payroll) / length(msc2001$Est..Payroll),
sum(msc2002$Est..Payroll) / length(msc2002$Est..Payroll), sum(msc2003$Est..Payroll) / length(msc2003$Est..Payroll), sum(msc2004$Est..Payroll) / length(msc2004$Est..Payroll), sum(msc2005$Est..Payroll) / length(msc2005$Est..Payroll),
sum(msc2006$Est..Payroll) / length(msc2006$Est..Payroll), sum(msc2007$Est..Payroll) / length(msc2007$Est..Payroll), sum(msc2008$Est..Payroll) / length(msc2008$Est..Payroll))
plot(payroll, type = "o", col = "red", xlab = "Years", ylab = "Average Payroll Per Team",
main = "Average Team Payroll Per Year", x = c(1990:2008))
sd(pre.steroid)
sd(during.steroid)
nrow(pre.steroid)
nrow(during.steroid)
pre.steroid <- attendance[0:5]
pre.steroid
during.steroid
after.steroid
pre.steroid <- attendance[0:5]
pre.steroid
attendance
[0:5]
0:5
attendance[4]
attendance[5]
attendance[4]
pre.steroid
attendance[0]
attendance[1]
attendnce[0]
attendance[0]
sum(msc1990$Attendance) / length(msc1990$Attendance)
attendance[19]
attendance[20]
pre.steroid <- attendance[1:6]
during.steroid <- attendance[7:13]
after.steroid <- attendance[14:19]
t.test(pre.steroid, during.steroid)
t.test(pre.steroid, during.steroid)
t.test(during.steroid, after.steroid)
t.test(pre.steroid, during.steroid)
t.test(during.steroid, after.steroid)
library(plotly)
setwd("C:/Users/Tu/Desktop/Junior Year/Fall/INFO 370 Data Science/Final Project/steroid-era-mlb-godwinners")
GL <- read.csv('Data/GL2008.csv')
msc1990 <- read.csv('Data/MSC1990.csv')
msc1991 <- read.csv('Data/MSC1991.csv')
msc1992 <- read.csv('Data/MSC1992.csv')
msc1993 <- read.csv('Data/MSC1993.csv')
msc1994 <- read.csv('Data/MSC1994.csv')
msc1995 <- read.csv('Data/MSC1995.csv')
msc1996 <- read.csv('Data/MSC1996.csv')
msc1997 <- read.csv('Data/MSC1997.csv')
msc1998 <- read.csv('Data/MSC1998.csv')
msc1999 <- read.csv('Data/MSC1999.csv')
msc2000 <- read.csv('Data/MSC2000.csv')
msc2001 <- read.csv('Data/MSC2001.csv')
msc2002 <- read.csv('Data/MSC2002.csv')
msc2003 <- read.csv('Data/MSC2003.csv')
msc2004 <- read.csv('Data/MSC2004.csv')
msc2005 <- read.csv('Data/MSC2005.csv')
msc2006 <- read.csv('Data/MSC2006.csv')
msc2007 <- read.csv('Data/MSC2007.csv')
msc2008 <- read.csv('Data/MSC2008.csv')
attendance <- c(sum(msc1990$Attendance) / length(msc1990$Attendance), sum(msc1991$Attendance) / length(msc1991$Attendance),
sum(msc1992$Attendance) / length(msc1992$Attendance), sum(msc1993$Attendance) / length(msc1993$Attendance),
sum(msc1994$Attendance) / length(msc1994$Attendance), sum(msc1995$Attendance) / length(msc1995$Attendance),
sum(msc1996$Attendance) / length(msc1996$Attendance), sum(msc1997$Attendance) / length(msc1997$Attendance),
sum(msc1998$Attendance) / length(msc1998$Attendance), sum(msc1999$Attendance) / length(msc1999$Attendance),
sum(msc2000$Attendance) / length(msc2000$Attendance), sum(msc2001$Attendance) / length(msc2001$Attendance),
sum(msc2002$Attendance) / length(msc2002$Attendance), sum(msc2003$Attendance) / length(msc2003$Attendance),
sum(msc2004$Attendance) / length(msc2004$Attendance), sum(msc2005$Attendance) / length(msc2005$Attendance),
sum(msc2006$Attendance) / length(msc2006$Attendance), sum(msc2007$Attendance) / length(msc2007$Attendance),
sum(msc2008$Attendance) / length(msc2008$Attendance))
pre.steroid <- attendance[1:6]
during.steroid <- attendance[7:13]
after.steroid <- attendance[14:19]
sd(pre.steroid)
sd(during.steroid)
t.test(pre.steroid, during.steroid)
t.test(during.steroid, after.steroid)
plot(attendance, type = "o", col = "red", xlab = "Years", ylab = "Average Attendance Per Team (People)",
main = "Average Team Attendance Per Year", x = c(1990:2008))
# Time to convert the $ into int
msc1990$Est..Payroll <- as.numeric(gsub('[$,]', '', msc1990$Est..Payroll))
msc1991$Est..Payroll <- as.numeric(gsub('[$,]', '', msc1991$Est..Payroll))
msc1992$Est..Payroll <- as.numeric(gsub('[$,]', '', msc1992$Est..Payroll))
msc1993$Est..Payroll <- as.numeric(gsub('[$,]', '', msc1993$Est..Payroll))
msc1994$Est..Payroll <- as.numeric(gsub('[$,]', '', msc1994$Est..Payroll))
msc1995$Est..Payroll <- as.numeric(gsub('[$,]', '', msc1995$Est..Payroll))
msc1996$Est..Payroll <- as.numeric(gsub('[$,]', '', msc1996$Est..Payroll))
msc1997$Est..Payroll <- as.numeric(gsub('[$,]', '', msc1997$Est..Payroll))
msc1998$Est..Payroll <- as.numeric(gsub('[$,]', '', msc1998$Est..Payroll))
msc1999$Est..Payroll <- as.numeric(gsub('[$,]', '', msc1999$Est..Payroll))
msc2000$Est..Payroll <- as.numeric(gsub('[$,]', '', msc2000$Est..Payroll))
msc2001$Est..Payroll <- as.numeric(gsub('[$,]', '', msc2001$Est..Payroll))
msc2002$Est..Payroll <- as.numeric(gsub('[$,]', '', msc2002$Est..Payroll))
msc2003$Est..Payroll <- as.numeric(gsub('[$,]', '', msc2003$Est..Payroll))
msc2004$Est..Payroll <- as.numeric(gsub('[$,]', '', msc2004$Est..Payroll))
msc2005$Est..Payroll <- as.numeric(gsub('[$,]', '', msc2005$Est..Payroll))
msc2006$Est..Payroll <- as.numeric(gsub('[$,]', '', msc2006$Est..Payroll))
msc2007$Est..Payroll <- as.numeric(gsub('[$,]', '', msc2007$Est..Payroll))
msc2008$Est..Payroll <- as.numeric(gsub('[$,]', '', msc2008$Est..Payroll))
payroll <- c(sum(msc1990$Est..Payroll) / length(msc1990$Est..Payroll), sum(msc1991$Est..Payroll) / length(msc1991$Est..Payroll), sum(msc1992$Est..Payroll) / length(msc1992$Est..Payroll), sum(msc1993$Est..Payroll) / length(msc1993$Est..Payroll),
sum(msc1994$Est..Payroll) / length(msc1994$Est..Payroll), sum(msc1995$Est..Payroll) / length(msc1995$Est..Payroll), sum(msc1996$Est..Payroll) / length(msc1996$Est..Payroll), sum(msc1997$Est..Payroll) / length(msc1997$Est..Payroll),
sum(msc1998$Est..Payroll) / length(msc1998$Est..Payroll), sum(msc1999$Est..Payroll) / length(msc1999$Est..Payroll), sum(msc2000$Est..Payroll) / length(msc2000$Est..Payroll), sum(msc2001$Est..Payroll) / length(msc2001$Est..Payroll),
sum(msc2002$Est..Payroll) / length(msc2002$Est..Payroll), sum(msc2003$Est..Payroll) / length(msc2003$Est..Payroll), sum(msc2004$Est..Payroll) / length(msc2004$Est..Payroll), sum(msc2005$Est..Payroll) / length(msc2005$Est..Payroll),
sum(msc2006$Est..Payroll) / length(msc2006$Est..Payroll), sum(msc2007$Est..Payroll) / length(msc2007$Est..Payroll), sum(msc2008$Est..Payroll) / length(msc2008$Est..Payroll))
plot(payroll, type = "o", col = "red", xlab = "Years", ylab = "Average Payroll Per Team",
main = "Average Team Payroll Per Year", x = c(1990:2008))
msc1990
pre.steroid
msc2008
View(msc2008)
gl1990 <- read.csv('Data/GL1990.csv')
gl1991 <- read.csv('Data/GL1991.csv')
gl1992 <- read.csv('Data/GL1992.csv')
gl1993 <- read.csv('Data/GL1993.csv')
gl1994 <- read.csv('Data/GL1994.csv')
gl1995 <- read.csv('Data/GL1995.csv')
gl1996 <- read.csv('Data/GL1996.csv')
gl1997 <- read.csv('Data/GL1997.csv')
gl1998 <- read.csv('Data/GL1998.csv')
gl1999 <- read.csv('Data/GL1999.csv')
gl2000 <- read.csv('Data/GL2000.csv')
gl2001 <- read.csv('Data/GL2001.csv')
gl2002 <- read.csv('Data/GL2002.csv')
gl2003 <- read.csv('Data/GL2003.csv')
gl2004 <- read.csv('Data/GL2004.csv')
gl2005 <- read.csv('Data/GL2005.csv')
gl2006 <- read.csv('Data/GL2006.csv')
gl2007 <- read.csv('Data/GL2007.csv')
gl2008 <- read.csv('Data/GL2008.csv')
nrow(gl1990)
nrow(gl2008)
attendance[1] = attendance[1] / gl1990
attendance[1]
attendance[2]
attendance <- c(sum(msc1990$Attendance) / length(msc1990$Attendance), sum(msc1991$Attendance) / length(msc1991$Attendance),
sum(msc1992$Attendance) / length(msc1992$Attendance), sum(msc1993$Attendance) / length(msc1993$Attendance),
sum(msc1994$Attendance) / length(msc1994$Attendance), sum(msc1995$Attendance) / length(msc1995$Attendance),
sum(msc1996$Attendance) / length(msc1996$Attendance), sum(msc1997$Attendance) / length(msc1997$Attendance),
sum(msc1998$Attendance) / length(msc1998$Attendance), sum(msc1999$Attendance) / length(msc1999$Attendance),
sum(msc2000$Attendance) / length(msc2000$Attendance), sum(msc2001$Attendance) / length(msc2001$Attendance),
sum(msc2002$Attendance) / length(msc2002$Attendance), sum(msc2003$Attendance) / length(msc2003$Attendance),
sum(msc2004$Attendance) / length(msc2004$Attendance), sum(msc2005$Attendance) / length(msc2005$Attendance),
sum(msc2006$Attendance) / length(msc2006$Attendance), sum(msc2007$Attendance) / length(msc2007$Attendance),
sum(msc2008$Attendance) / length(msc2008$Attendance))
attendance[1] = attendance[1] / nrow(gl1990)
attendance[1]
attendance[19] = attendance[19] / nrow(gl2008)
attendance[19]
attendance <- c(sum(msc1990$Attend/G) / length(msc1990$Attend/G), sum(msc1991$Attend/G) / length(msc1991$Attend/G),
sum(msc1992$Attend/G) / length(msc1992$Attend/G), sum(msc1993$Attend/G) / length(msc1993$Attend/G),
sum(msc1994$Attend/G) / length(msc1994$Attend/G), sum(msc1995$Attend/G) / length(msc1995$Attend/G),
sum(msc1996$Attend/G) / length(msc1996$Attend/G), sum(msc1997$Attend/G) / length(msc1997$Attend/G),
sum(msc1998$Attend/G) / length(msc1998$Attend/G), sum(msc1999$Attend/G) / length(msc1999$Attend/G),
sum(msc2000$Attend/G) / length(msc2000$Attend/G), sum(msc2001$Attend/G) / length(msc2001$Attend/G),
sum(msc2002$Attend/G) / length(msc2002$Attend/G), sum(msc2003$Attend/G) / length(msc2003$Attend/G),
sum(msc2004$Attend/G) / length(msc2004$Attend/G), sum(msc2005$Attend/G) / length(msc2005$Attend/G),
sum(msc2006$Attend/G) / length(msc2006$Attend/G), sum(msc2007$Attend/G) / length(msc2007$Attend/G),
sum(msc2008$Attend/G) / length(msc2008$Attend/G))
pre.steroid <- attendance[1:6]
during.steroid <- attendance[7:13]
after.steroid <- attendance[14:19]
pre.steroid
attendance <- c(sum(msc1990$Attend/G) / length(msc1990$Attend/G), sum(msc1991$Attend/G) / length(msc1991$Attend/G),
sum(msc1992$Attend/G) / length(msc1992$Attend/G), sum(msc1993$Attend/G) / length(msc1993$Attend/G),
sum(msc1994$Attend/G) / length(msc1994$Attend/G), sum(msc1995$Attend/G) / length(msc1995$Attend/G),
sum(msc1996$Attend/G) / length(msc1996$Attend/G), sum(msc1997$Attend/G) / length(msc1997$Attend/G),
sum(msc1998$Attend/G) / length(msc1998$Attend/G), sum(msc1999$Attend/G) / length(msc1999$Attend/G),
sum(msc2000$Attend/G) / length(msc2000$Attend/G), sum(msc2001$Attend/G) / length(msc2001$Attend/G),
sum(msc2002$Attend/G) / length(msc2002$Attend/G), sum(msc2003$Attend/G) / length(msc2003$Attend/G),
sum(msc2004$Attend/G) / length(msc2004$Attend/G), sum(msc2005$Attend/G) / length(msc2005$Attend/G),
sum(msc2006$Attend/G) / length(msc2006$Attend/G), sum(msc2007$Attend/G) / length(msc2007$Attend/G),
sum(msc2008$Attend/G) / length(msc2008$Attend/G))
msc1990[Attend/G]
msc1990[Attend/G]
msc1990$Atten/G
msc1990$Attend.G
attendance <- c(sum(msc1990$Attend.G) / length(msc1990$Attend.G), sum(msc1991$Attend.G) / length(msc1991$Attend.G),
sum(msc1992$Attend.G) / length(msc1992$Attend.G), sum(msc1993$Attend.G) / length(msc1993$Attend.G),
sum(msc1994$Attend.G) / length(msc1994$Attend.G), sum(msc1995$Attend.G) / length(msc1995$Attend.G),
sum(msc1996$Attend.G) / length(msc1996$Attend.G), sum(msc1997$Attend.G) / length(msc1997$Attend.G),
sum(msc1998$Attend.G) / length(msc1998$Attend.G), sum(msc1999$Attend.G) / length(msc1999$Attend.G),
sum(msc2000$Attend.G) / length(msc2000$Attend.G), sum(msc2001$Attend.G) / length(msc2001$Attend.G),
sum(msc2002$Attend.G) / length(msc2002$Attend.G), sum(msc2003$Attend.G) / length(msc2003$Attend.G),
sum(msc2004$Attend.G) / length(msc2004$Attend.G), sum(msc2005$Attend.G) / length(msc2005$Attend.G),
sum(msc2006$Attend.G) / length(msc2006$Attend.G), sum(msc2007$Attend.G) / length(msc2007$Attend.G),
sum(msc2008$Attend.G) / length(msc2008$Attend.G))
pre.steroid <- attendance[1:6]
during.steroid <- attendance[7:13]
after.steroid <- attendance[14:19]
plot(attendance, type = "o", col = "red", xlab = "Years", ylab = "Average Attendance Per Team (People)",
main = "Average Team Attendance Per Year", x = c(1990:2008))
t.test(pre.steroid, during.steroid)
t.test(during.steroid, after.steroid)
plot(attendance, type = "o", col = "red", xlab = "Years", ylab = "Average People Per Game",
main = "Average Yearly Attendance Per Game", x = c(1990:2008))
attendance
min(attendance)
max(attendance)
sd(attendance)
mean(attendance)
median(attendance)
t.test(pre.steroid, during.steroid)
t.test(during.steroid, after.steroid)
t.test(pre.steroid, during.steroid)
pre.steroid <- attendance[1:6]
during.steroid <- attendance[7:13]
after.steroid <- attendance[14:19]
t.test(pre.steroid, during.steroid)
t.test(during.steroid, after.steroid)
min(payroll)
max(payroll)
sd(payroll)
mean(payroll)
median(payroll)
plot(payroll, type = "o", col = "red", xlab = "Years", ylab = "Average Payroll Per Team",
main = "Average Team Payroll Per Year", x = c(1990:2008))
plot(payroll, type = "o", col = "red", xlab = "Years", ylab = "Average Payroll Per Team ($)",
main = "Average Team Payroll Per Year", x = c(1990:2008))
min(payroll)
max(payroll)
sd(payroll)
mean(payroll)
median(payroll)
sd(payroll)
plot(attendance, type = "o", col = "red", xlab = "Years", ylab = "Average People Per Game",
main = "Average Yearly Attendance Per Game", x = c(1990:2008))
